<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Open | OpenSensors.IO]]></title>
  <link href="http://blog.opensensors.io/blog/categories/open/atom.xml" rel="self"/>
  <link href="http://blog.opensensors.io/"/>
  <updated>2015-10-07T11:08:09+01:00</updated>
  <id>http://blog.opensensors.io/</id>
  <author>
    <name><![CDATA[OpenSensors.IO]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Monitoring for Earthquakes With Node-red]]></title>
    <link href="http://blog.opensensors.io/blog/2015/08/14/monitoring-for-earthquakes-with-node-red/"/>
    <updated>2015-08-14T15:07:00+01:00</updated>
    <id>http://blog.opensensors.io/blog/2015/08/14/monitoring-for-earthquakes-with-node-red</id>
    <content type="html"><![CDATA[<p>OpenSensors now capture seismic data from the Euro-Med Seismic Centre (EMSC) and the United States Geological Survey (USGS). Every ten minutes we are polling the latest information of major and minor earthquakes around the globe and make this information available via our programming interface (API) or as MQTT feed.
In this short tutorial, we’re showing you how to use OpenSensors together with Node-RED to receive email alerts whenever there’s a major incident in a region of interest. You can use this guide as starting point for further experiments with Node-RED and develop your own earthquake-triggered workflows. Let’s shake it.</p>

<h2>On OpenSensors</h2>

<ul>
<li><p>First, you need to login to your account on OpenSensor or sign up for one if you haven’t done so already at <a href="https://opensensors.io.">https://opensensors.io.</a></p></li>
<li><p>Next, it’s good practice to have a new ‘device’ for this application, i.e. a dedicated set of credentials you’re going to use to log in to OpenSensors for this particular set of MQTT feeds.</p>

<ul>
<li>In the panel on the left, click My Devices in the Devices menu.</li>
<li>Click the yellow Create New Device button at the top of the page.</li>
<li>Optional: Add some optional descriptions and press the disk icon to save your new device.</li>
<li>Take a note of your ‘Client id’ and ‘Password’ as you’re going to need them in your Node-RED workflow.</li>
</ul>
</li>
</ul>


<p><img src="/images/quakelistener.png" /></p>

<h2>For Node-RED</h2>

<p>Install node.js and Node-RED on your system. There’s a very good guide for this on the <a href="http://nodered.org/docs/getting-started/installation.html">Node-RED website</a>. Follow the instructions, including the separate section on Running Node-RED.</p>

<p>Once you’re ready, open a web browser and direct it to localhost:1880, the default address and port of the Node-RED GUI on your system.</p>

<p><img src="/images/noderedquake.png" /></p>

<p>(A very basic description of the Node-RED vocabulary can also be found at <a href="http://www.slideshare.net/BorisAdryan/node-red-workflowcoursetoulouse">SlideShare</a>.)</p>

<h2>Developing a workflow</h2>

<ul>
<li><p>From the input panel of your nodes library on the left side, drag and drop a pink mqtt input node into the work area named Sheet  1.</p></li>
<li><p>Double-click the mqtt node. A window with configuration details opens.</p>

<ul>
<li>Click the pen symbol next to ‘Add new mqtt-broker&hellip;’. Your Broker is opensensors.io, your Client ID and Password those you generated in the previous step on the OpenSensors website, and User is your OpenSensor user name.</li>
</ul>
</li>
</ul>


<p><img src="/images/noderedmqtt.png" /></p>

<ul>
<li>Once the Broker is defined, enter /orgs/EMSC/+ into the Topic field. This is going to instruct Node-RED to subscribe to all MQTT topics generated by the EMSC.</li>
<li><p>Optional: Set the Name of this node to ‘EMSC’.</p></li>
<li><p>Drag and drop a second mqtt input node. When you double-click the node, you will realise that the Broker settings default to the ones you previously entered.</p>

<ul>
<li>Enter /orgs/USGS/+ in the Topics field and ‘USGS’ as optional Name.</li>
</ul>
</li>
<li><p>Drag and drop a dark green debug node from the output panel on the left. While debugging has the connotation of fixing a problem, in Node-RED it’s the default way of directly communicating messages to the user.</p></li>
<li><p>Draw connection lines (“pipes”) from both mqtt nodes to the debug node.</p></li>
</ul>


<p><img src="/images/noderedflow.png" /></p>

<ul>
<li>Press the red Deploy button in the upper right corner. This starts your Node-RED flow. If everything worked, you should see ‘connected’ underneath the mqtt nodes and your debug panel (on the right) should soon produce the following JSON-formatted output if there’s an event (which may take a while!):</li>
</ul>


<p><img src="/images/nddebugger.png" /></p>

<p>While it is pleasing to be informed about every time the earth shakes, it soon becomes tedious staring at the debug panel in expectation of an earthquake. Also, you may not be interested in events in remote areas of the world, or exactly in those &ndash; whatever interests you.</p>

<p>We are going to extend our flow with some decision making:</p>

<p>First, we need to parse the information from the EMSC and USGS. For this example, we’re going to be particularly interested in the fields region and magnitude. There are plenty more fields in their records, and you may want to adjust this flow to your needs.</p>

<ul>
<li><p>Drag and drop a pale orange function node from the functions panel into your flow. Connect both mqtt nodes to the input side (the left side) of your function node. Function nodes allow you directly interact with your data using JavaScript.</p></li>
<li><p>Enter the following code (or download the OpenSensors workflow).</p></li>
</ul>


<p><img src="/images/nseditor.png" /></p>

<p>Here be a JavaScript course… :&ndash;) In a nutshell, this code takes data from the ‘payload’ of the incoming message (read up on the topic and payload concept of Node-RED in the SlideShare article suggested earlier). The payload is then parsed for the region and magnitude fields using standard regular expressions. If we can successfully extract information (in this case: the region containing ‘ia’ somewhere in it’s name), we’re going to set the outgoing message’s payload to the magnitude, its topic to ‘EVENT in ‘ plus the name of the region and pass it on (‘return msg’) to the next node.</p>

<ul>
<li>Drag and drop a lime green switch node from the function panel into your workflow. Connect the output of the function node to the input of the switch node. Configure (by double-clicking) the switch node to assert if the payload (being the magnitude of the earthquake) is greater than 2. Only then the message is going to be passed on.</li>
</ul>


<p><img src="/images/editswitch.png" /></p>

<ul>
<li>Last, we’re going to drag and drop a light green e-mail output node from the social panel and configure it like an e-mail client, but with a default recipient: here in this case, <a href="&#x6d;&#x61;&#105;&#x6c;&#116;&#x6f;&#58;&#111;&#x68;&#109;&#121;&#x67;&#111;&#100;&#105;&#116;&#104;&#97;&#x70;&#x70;&#101;&#x6e;&#100;&#x40;&#x67;&#109;&#x61;&#105;&#108;&#x2e;&#x63;&#x6f;&#109;&#x2e;">&#111;&#x68;&#109;&#x79;&#x67;&#111;&#x64;&#x69;&#x74;&#x68;&#x61;&#112;&#112;&#x65;&#110;&#x64;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#109;&#46;</a></li>
</ul>


<p><img src="/images/nseditemail.png" /></p>

<ul>
<li><p>Connect the output of the switch node to our debug node, as well as to the outgoing e-mail node.</p></li>
<li><p>We can then deploy the new workflow and should see something like this after a while:</p></li>
</ul>


<p><img src="/images/newflow.png" /></p>

<p>In this case, an event was detected ‘off the coast of Northern California’ with a magnitude of 4.4 and at the same time, you should receive an e-mail with the region as subject and the magnitude in the body of the e-mail.</p>

<p>We hope that this flow is getting you started! Remember that Node-RED is superbly suited to interact with hardware… &hellip;imagine LEDs and buzzers indicating an earthquake.</p>

<p>The flow JSON:
[{&ldquo;id&rdquo;:&ldquo;e9024ae0.16fdb8&rdquo;,&ldquo;type&rdquo;:&ldquo;mqtt-broker&rdquo;,&ldquo;broker&rdquo;:&ldquo;opensensors.io&rdquo;,&ldquo;port&rdquo;:&ldquo;1883&rdquo;,&ldquo;clientid&rdquo;:&ldquo;1646&rdquo;},{&ldquo;id&rdquo;:&ldquo;2952b879.d6ad48&rdquo;,&ldquo;type&rdquo;:&ldquo;mqtt in&rdquo;,&ldquo;name&rdquo;:&ldquo;EMSC&rdquo;,&ldquo;topic&rdquo;:&ldquo;/orgs/EMSC/+&rdquo;,&ldquo;broker&rdquo;:&ldquo;e9024ae0.16fdb8&rdquo;,&ldquo;x&rdquo;:127,&ldquo;y&rdquo;:104,&ldquo;z&rdquo;:&ldquo;82a1c632.7d5e38&rdquo;,&ldquo;wires&rdquo;:[[&ldquo;490a140f.b6f5ec&rdquo;,&ldquo;163677af.e9c988&rdquo;]]},{&ldquo;id&rdquo;:&ldquo;54239d6.fabdc64&rdquo;,&ldquo;type&rdquo;:&ldquo;mqtt in&rdquo;,&ldquo;name&rdquo;:&ldquo;USGS&rdquo;,&ldquo;topic&rdquo;:&ldquo;/orgs/USGS/+&rdquo;,&ldquo;broker&rdquo;:&ldquo;e9024ae0.16fdb8&rdquo;,&ldquo;x&rdquo;:128,&ldquo;y&rdquo;:159,&ldquo;z&rdquo;:&ldquo;82a1c632.7d5e38&rdquo;,&ldquo;wires&rdquo;:[[&ldquo;490a140f.b6f5ec&rdquo;,&ldquo;163677af.e9c988&rdquo;]]},{&ldquo;id&rdquo;:&ldquo;490a140f.b6f5ec&rdquo;,&ldquo;type&rdquo;:&ldquo;debug&rdquo;,&ldquo;name&rdquo;:&ldquo;&rdquo;,&ldquo;active&rdquo;:true,&ldquo;console&rdquo;:&ldquo;false&rdquo;,&ldquo;complete&rdquo;:&ldquo;false&rdquo;,&ldquo;x&rdquo;:538,&ldquo;y&rdquo;:86,&ldquo;z&rdquo;:&ldquo;82a1c632.7d5e38&rdquo;,&ldquo;wires&rdquo;:[]},{&ldquo;id&rdquo;:&ldquo;163677af.e9c988&rdquo;,&ldquo;type&rdquo;:&ldquo;function&rdquo;,&ldquo;name&rdquo;:&ldquo;parse&rdquo;,&ldquo;func&rdquo;:&ldquo;// uppercase the payload (different centres report in mixed formats)\nmsg.payload = msg.payload.toUpperCase();\n\n// extracting interesting fields with regular expressions,\n// instead of using JSON.parse which fails with null fields\nvar places_with_ia_regex = new RegExp(\"REGION\\&rdquo;:\\&ldquo;(.<em>IA.</em>)\\&rdquo;,\\&ldquo;UPDATED\&rdquo;);\nvar result1 = places_with_ia_regex.exec(msg.payload);\n\nvar magnitude_regex = new RegExp(\&ldquo;MAGNITUDE\\&rdquo;:([0-9].[0-9]+)\&ldquo;);\nvar result2 = magnitude_regex.exec(msg.payload);\n\n// if successful, sets topic to the region and payload to the magnitude\nif (result1 &amp;&amp; result2) {\n  msg.topic = &lsquo;EVENT in &rsquo;+result1[1];\n  msg.payload = result2[1];\n  return msg;\n}&rdquo;,&ldquo;outputs&rdquo;:1,&ldquo;noerr&rdquo;:0,&ldquo;x&rdquo;:296,&ldquo;y&rdquo;:251,&ldquo;z&rdquo;:&ldquo;82a1c632.7d5e38&rdquo;,&ldquo;wires&rdquo;:[[&ldquo;64f4f2ea.9b0b0c&rdquo;]]},{&ldquo;id&rdquo;:&ldquo;64f4f2ea.9b0b0c&rdquo;,&ldquo;type&rdquo;:&ldquo;switch&rdquo;,&ldquo;name&rdquo;:&ldquo;at least magnitude 2&rdquo;,&ldquo;property&rdquo;:&ldquo;payload&rdquo;,&ldquo;rules&rdquo;:[{&ldquo;t&rdquo;:&ldquo;gte&rdquo;,&ldquo;v&rdquo;:&ldquo;2&rdquo;}],&ldquo;checkall&rdquo;:&ldquo;true&rdquo;,&ldquo;outputs&rdquo;:1,&ldquo;x&rdquo;:428,&ldquo;y&rdquo;:179,&ldquo;z&rdquo;:&ldquo;82a1c632.7d5e38&rdquo;,&ldquo;wires&rdquo;:[[&ldquo;490a140f.b6f5ec&rdquo;,&ldquo;f7bcc59c.084338&rdquo;]]},{&ldquo;id&rdquo;:&ldquo;f7bcc59c.084338&rdquo;,&ldquo;type&rdquo;:&ldquo;e-mail&rdquo;,&ldquo;server&rdquo;:&ldquo;smtp.gmail.com&rdquo;,&ldquo;port&rdquo;:&ldquo;465&rdquo;,&ldquo;name&rdquo;:&ldquo;<a href="&#x6d;&#x61;&#105;&#108;&#116;&#x6f;&#x3a;&#x6f;&#104;&#x6d;&#121;&#x67;&#111;&#x64;&#105;&#116;&#x68;&#97;&#112;&#112;&#x65;&#110;&#x65;&#100;&#64;&#x67;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#x6d;">&#x6f;&#104;&#x6d;&#121;&#x67;&#x6f;&#x64;&#x69;&#x74;&#104;&#97;&#x70;&#112;&#101;&#x6e;&#x65;&#100;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#99;&#111;&#109;</a>&rdquo;,&ldquo;dname&rdquo;:&ldquo;&rdquo;,&ldquo;x&rdquo;:581,&ldquo;y&rdquo;:256,&ldquo;z&rdquo;:&ldquo;82a1c632.7d5e38&rdquo;,&ldquo;wires&rdquo;:[]}]</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First 'Things' First]]></title>
    <link href="http://blog.opensensors.io/blog/2015/08/06/first-things-first/"/>
    <updated>2015-08-06T16:36:00+01:00</updated>
    <id>http://blog.opensensors.io/blog/2015/08/06/first-things-first</id>
    <content type="html"><![CDATA[<p><img src="/images/ODI.jpg" /></p>

<p>I was pleased to see the <a href="http://theodi.org/data-spectrum">recent post</a> by the ODI on the open-shared-closed data spectrum since it resonates with the challenges faced at OpenSensors. To date most of our commercial projects have been at the private end of the spectrum; they are challenging, they are innovative, but they are often not ingesting open data or publishing data as an exhaust.</p>

<p>Are we worried about private IoT messaging? Not too much. Most of our private clients choose to get their own house in order first, after all typically there’s a lot of opportunity to juice existing sensors. First ‘things’ first as they say.</p>

<p>The good news is these deployments are sowing the seeds of sharing behaviours by distributing content internally, releasing data that used to terminate and die. They are unlocking data and distributing for access via API for dashboards, data science and decision support, which is the first step on a journey to openness.</p>

<p>So as a tech company how do we lead our clients and help them deliver open data strategy? We provide the tools to allow organisations to manage data entitlements pushing themselves up the data spectrum to become open. Each of our clients will make their own journey to open up their content, our job is to deliver infrastructure allowing them to manage data at a privacy that works for them.</p>

<p>This is important stuff. IoT tech companies are developing the smart city data network, and we don’t want it to be private.  We want pain free navigation from edge to edge of our urban data grid, whilst feeling secure and confident about the data we consume. Our platforms must secure data whilst facilitating its exchange and entitlement control, so what’s needed to make smart city data exchange a reality? A couple of things spring to mind, we need to &hellip;</p>

<p><strong>Evolve Topics and Communities</strong> &ndash; Expect faster adoption of sharing behaviours within trusted communities. By curating communities with shared interests expect adoption of localised data exchange, say amongst tenants of a commercial property. Communities sharing data should ease the path to universal open data.</p>

<p><strong>Evolve Exchange Mechanisms</strong> &ndash; Transparent pain free data exchange is key to delivering a functionally rich lean IoT data infrastructure, the alternative could be akin to a ‘european data mountain’ of needless and costly sensor deployments.</p>

<p>Building the tech stack for these needs is plenty of work, so as we define the business and technical models for IoT we need to act responsibly. Deploying and decommissioning software is cheap, just a couple of mouse clicks away. IoT deployments are very real, they consume natural resource, risk cluttering our environment and can loiter well past their usefulness.</p>

<p>Encouraging sharing behaviour within IoT through lean shared infrastructure will prevent waste. The alternative would be a legacy of urban junk, we made a mess of space by not decommissioning hardware, lets not do the same with our urban environment and keep it open and centred on communities.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[When Sensors and Open Data Collide]]></title>
    <link href="http://blog.opensensors.io/blog/2015/07/07/when-sensors-and-open-data-collide/"/>
    <updated>2015-07-07T10:23:00+01:00</updated>
    <id>http://blog.opensensors.io/blog/2015/07/07/when-sensors-and-open-data-collide</id>
    <content type="html"><![CDATA[<p>So I’m new to IoT having spent my career trying to find meaning in econometric data (ouch). Given I started life as a structural engineer I’m pretty excited to be working on data products with opensensors.io, feels like I’m back home again. So what’s exciting me today about where IoT and data science collide?</p>

<p>As data scientists we’re always looking at new models, new ways of shaping our view on a given data set to eek out some kind of edge. But at some point it feels like we’re chasing our tails with little hope of finding new factors to make our science better. Without new data, or at least the same data in a more granular or timely form, we’re just rehashing the same functional forms over the same content.</p>

<p>Fortunately life is about to get a whole lot more interesting as more connected devices come on line. We’re experiencing tangible innovation in IoT, we’re not talking hand wavy stuff; at opensensors.io we see hackers, hobbyists and enterprises building the next generation of smart cities with real velocity.</p>

<p>We’re also fired up since we see pretty much everyone embracing openness in their data. Exactly what open data means remains up for debate, but most agree that some flavour of open data is a prerequisite for successful smart cities.</p>

<p>It would be a pretty dumb city where you could only use the data in your own location.  So it makes sense to open pathways for data to be exchanged allowing us all to benefit from advances in technology, without a cost to our built environment. The alternative is a proliferation of street clutter used to deliver data already gathered in our smart buildings. Paradoxically not smart!  Having delivered connected buildings, transport and personal devices can expect a wave of innovation in apps and data science. So what’s would help to make this happen?</p>

<p>Communities &ndash; Architects, hackers and makers provide the crucible of IoT innovation but need support for their creative process. Helping to gong the technical pain points is great, even better is curating communities to support and challenge. Our mission is to build best of breed engineering whilst retaining our community roots leveraging platforms like github and hackster.</p>

<p>Connect existing things – Increasingly we see opensensors.io used to unlock value in existing device estates. For many enterprises it’s the ‘I’ in IoT that is new, to deliver the ‘I’ they need open, available, performant, secure and low cost messaging and data persistence.</p>

<p>Put open data to work – ‘I can’t define it, but I know it when I see it’, to paraphrase Justice Potter Stewart. The debate about what is open data will remain, what is rightly or wrongly tagged as such. But expect innovation in business models firmly founded on principles of open data. ‘Open’ may mean sharing data with your neighbour, your street, your city. Most importantly make it economically attractive for all enterprises to make data available in some form, even if it’s not ‘open’ in the purest sense.</p>

<p>We have an exciting journey ahead delivering significant change to our urban environment. Over a century ago ‘The league of American Wheelman’ catalysed improvements to America’s transport infrastructure; open data movement can deliver similar disruptive change to our urban environment. I hope open data becomes as ubiquitous as our transport network is today; in future no one will recall activists like the ODI and opensensors.io, but that would be a sign of open data’s success.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Open and Transparent]]></title>
    <link href="http://blog.opensensors.io/blog/2015/03/27/open-and-transparent/"/>
    <updated>2015-03-27T00:18:00+00:00</updated>
    <id>http://blog.opensensors.io/blog/2015/03/27/open-and-transparent</id>
    <content type="html"><![CDATA[<h1>Open And Transparent</h1>

<p>It’s been an interesting few days in OpenSensors HQ. My fairly harmless comment about privacy and security for the Internet of things on Twitter turned into a fracas.  A fairly prominent blogger and activist, Aral Balkan, took issue with our use of the word Open in our company name.  Twitter is not the best medium for nuanced debate so I wanted to address the points raised.</p>

<p>The central point of Aral’s comments can be summed up by his tweet
<em>If you have a closed platform, don’t call it open. Is that too much to ask for?</em></p>

<p>For clarity, here is why we are proud to call ourselves <strong>Open</strong>Sensors.</p>

<h2>Who we are</h2>

<p>We are an Open Data and Internet of Things startup incubated in the
Open Data Institute, founded by our hero Sir Tim Berners Lee.  If you have never come
across open data please check out his
<a href="http://www.ted.com/talks/tim_berners_lee_on_the_next_web?language=en">great talk</a>
about what it is and also see the great <a href="https://okfn.org/opendata/">Open Knowledge Foundation&rsquo;s write up</a>.</p>

<p>The <a href="http://en.wikipedia.org/wiki/Internet_of_Things">Internet of Things (IoT)</a> is a very broad term for
connecting day to day objects and sensors to the internet. In the IoT world open refers to Open Source Software (OSS), Open Data, Open Hardware, Open Protocols and the Open Web. The common thread that holds these ideals together is that accessibility is key to creating value and benefit.</p>

<p>We strongly believe in all of these ideals. We write open source code and we develop firmware for Open Hardware devices and our guiding principle is to support Open Internet of Things and Web protocols.</p>

<p>OpenSensors aims to create a real time public data exchange.  Most public sensor data sets are currently sitting in silos and we will make them available for reuse by anyone with Open Data Licences. Publishers of data sets include individuals, cities, etc  Data such as Air Quality information, flooding, parking etc is so much more useful when it’s accessible and reusable by as many people and services as possible.</p>

<p>In order to do this, we have built a hugely scalable core, thanks to existing Open Source projects.  We use standard web technologies such as HTTP as well as Server Sent Events for easy real time transfer of data between sensors and the web. In addition, we use Open Sensor protocols such as MQTT to enable M2M applications and we will soon have support for another great open protocol CoAP.</p>

<h2>Will all our code be Open?</h2>

<p>We will develop open source software (including our core azondi). We
will also contribute back in some way to the huge amount of open source software we use such as Cassandra, Elastic Search, Postgres,
Netty, a ton of <a href="http://clojurewerkz.org/">clojurewerkz projects</a> and
have incubated <a href="https://github.com/juxt/cylon">Cylon</a>, a security
library, from Alpha.  We have plans to release a ton of other OSS
projects for things that we needed to scratch our itch.  We recognise
that we stand on shoulders of the giants of the computer science world.</p>

<p>All that being said please be aware that we are not a social
enterprise and there will be parts of our code base that will be
private. We are ultimately a for profit company and our aim is to
create a sustainable business model for an engineering led business to
thrive.</p>

<ul>
<li>We want to hire amazing developers to solve hard problems, enable them to unleash their creative energies and love the product.</li>
<li>We pay everyone from interns upwards a sustainable wage.</li>
<li>We value diversity and spend time and money organising community groups for free to give back.</li>
<li>We do not charge to speak at or to arrange community events.</li>
<li>We run paid training events where at least 30% of attendees places
will fully or in part covered by Open Sensors for those that don&rsquo;t have the means to pay the full price.</li>
<li>We do not depend on government funding and our pricing structure is very clear <a href="https://opensensors.io/pricing.">https://opensensors.io/pricing.</a></li>
</ul>


<p>We have a freemium model around open data that will hopefully create a
lot of value to a lot of people.  We also will enable our paid clients to build connected products for a charge in order to pay for servers, salaries, office costs, etc.</p>

<p>We aim to find enough people to give us their hard earned money by building an amazing product. It is that simple. We do not resell private data or try to create revenue from insight into private user behavior.</p>

<h2>Do we have the right to call ourselves Open and claim a seat at the table?</h2>

<p><strong>Hell Yes!</strong> No one gets to play at un-appointed gatekeeper in <strong>our</strong>
communities especially using exclusionary language and labels, not even
the founder of the web and open data.</p>

<p><img src="/images/finished.gif" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[An Open Data Startup]]></title>
    <link href="http://blog.opensensors.io/blog/2014/10/30/an-open-data-startup/"/>
    <updated>2014-10-30T18:00:00+00:00</updated>
    <id>http://blog.opensensors.io/blog/2014/10/30/an-open-data-startup</id>
    <content type="html"><![CDATA[<p>In that intense start up haze we occupy, the fact that
OpenSensors has turned 1 this month completely passed me
by! I feel that occasion should be marked with at least a post to
reflect on how far we have come in a year.</p>

<h2>An ODI startup <img src="/images/odi.png" /></h2>

<p>The highlight of the year has to be our inclusion to the
<a href="http://opendatainstitute.org/">Open Data Institute&rsquo;s</a> startup
program.</p>

<p>The ODI&rsquo;s mission is to unlock the potential of public data held by
governments and businesses to help solve the world&rsquo;s hard
problems. As our mission is to build a connected world based on open
data and technologies, being part of the ODI&rsquo;s network of like minded
people is the natural home for OpenSensors.</p>

<h2>Engineering Middleware is Hard</h2>

<p>The original middleware we designed and prototyped for OpenSensors has long been thrown
out, actually rewritten several times. We have spent hundreds of
engineering hours making it fast and secure. We can now comfortably process millions of
messages per second from hundreds of thousands of devices.  And most
importantly we let each of our users get their own real time feeds of data that they are interested in.</p>

<p>If you told me a year ago that it would take this long to build the
middleware we would be happy with, how I would have laughed at you&hellip;.</p>

<h2>Hardware is very Hard</h2>

<p>After spending some time working under the radar, towards the middle of 2014 the Internet
of Things
<a href="http://www.forbes.com/sites/gilpress/2014/08/18/its-official-the-internet-of-things-takes-over-big-data-as-the-most-hyped-technology/">hypecycle</a>
suddenly went into overdrive.</p>

<p>That being said designing and manufacturing hardware products at scale
is a significantly different proposition to scaling software. The
skill sets necessary to build and manufacture electronics products is
rare and laborious. We have found ourselves in the surprising position
of prototyping hardware for clients and cities as well as learning the
process of manufacturing.</p>

<h2>Aims for the coming year</h2>

<p>Our central ambition for the next year is to make it very easy for
people to find and contribute to rich sources of real time data that is of interest to them.</p>

<p>We have some exciting partnerships and projects with various cities and
groups in parking, disability accessibility and smart buildings all publishing open data. We
also want to help showcase the excellent work of the many community
based environmental sensing projects.</p>

<h2>Sunsetting the early access period</h2>

<p>As of the 1st of December 2014, we will be charging for private use of the
service. Open Data projects will always be free. Private projects
will incur a small monthly cost towards the service based on the
number of devices you run.</p>

<p>For a full details of the pricing, see <a href="https://opensensors.io/pricing">https://opensensors.io/pricing</a></p>
]]></content>
  </entry>
  
</feed>
